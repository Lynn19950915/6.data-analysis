
Lecture 02　導論: 物件與資料型態

--------------------------------------------------------------------------------

2-1　資料型態

> a<-3-8　#等同a=3-8
> a<-3*8　#物件導向語言: 重新賦予、指向新值　
> b=2^10
> c=7%%3　#取餘數: 形同7mod3, 7%3(python)


> 10, 2.5, -16
> 10L, 4L　#integer: 數值型態之一，強調整數
> 3+4i　#complex: 複數

> "Lynn", "Applepie"
> TRUE(T), FALSE(F)
> "2019-10-25"　#date，其下包含posixct, posixlt(datetime)格式

# 當要求資料型態相同時，將發生自動強制轉換:
  character > date, posixct, posixlt
  character > complex > numeric, integer > boolean


--------------------------------------------------------------------------------

2-2　物件型態: 每筆資料均有各自型態，一至多筆資料可組成物件

1.atomic: 物件內之元素，型態需保持相同

　vector: 一維，為最基本之物件。如顧客姓名、會員生日等。
> height=c(178, 167, 177, 177, 170)
> height
[1] 178 167 177 177 170
　
　factor: 一維，帶有類別型態之物件，可自訂是否具比較關係。如服裝尺碼、病患血型等。
> size=c("M", "XL", "S", "M", "L")
> size_factor=factor(size)　#以factor取出資料中之(不重複)類別
> size_factor
[1] M  XL S  M  L 
Levels: L M S XL
　　
　matrix: 二維，具備兩個以上之欄位。如考試成績榜等。
> M=matrix(1:8, nrow=2)
> M
     [,1] [,2] [,3] [,4]
[1,]    1    3    5    7
[2,]    2    4    6    8


2.recursive: 物件內之元素，型態可有差異

　list: 一維，由鍵值組合而成，類似python字典。可儲存與data frame相同之資料，惟維度結構不同。
> name=c("first", "mid", "final")
> per=c(30, 30, 40)
> ave=c(75, 78, 71)
> test=list(name, per, ave)
> test
[[1]] [1] "first" "mid" "final"　#巢狀列表: 由三大項組成，各自內均可再取出小項
[[2]] [1] 30 30 40
[[3]] [1] 75 78 71

　data frame: 二維，具備兩個以上之欄位。如顧客資料表。
> name=c("first", "mid", "final")
> per=c(30, 30, 40)
> ave=c(75, 78, 71)
> test=data.frame(name, per, ave)
> test
    name per ave
1  first  30  75
2  mid    30  78
3  final  40  71
